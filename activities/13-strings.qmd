```{r}
# DATE: "10/21/2024"
```
> AUTHOR: RILEY COGAN

```{r}
library(tidyverse)

classes <- data.frame(
  sem        = c("SP2023", "FA2023", "SP2024"),
  area       = c("History", "Math", "Anthro"),
  enroll     = c("30 - people", "20 - people", "25 - people"),
  instructor = c("Ernesto Capello", "Lori Ziegelmeier", "Arjun Guneratne")
)

classes
```
```{r}
# Define a new variable "num" that adds up the number of characters in the area label
classes |> 
  mutate(num = str_length(area))
```
```{r}
# My attempt:
classes |> 
  mutate(str_to_lower(area))

# Answer
# Change the areas to "history", "math", "anthro"
classes |> 
  mutate(area = str_to_lower(area))
```
```{r}
# Create a variable that id's which courses were taught in spring 
classes |> 
  mutate(spring = str_detect(sem, "SP"))
```
```{r}
# Change the semester labels to "fall2023", "spring2024", "spring2023"
classes |> 
  mutate(sem = str_replace(sem, "SP", "spring")) |> 
  mutate(sem = str_replace(sem, "FA", "fall"))
```
```{r}
# In the enroll variable, change all e's to 3's (just because?)
classes |> 
  mutate(enroll = str_replace_all(enroll, "e", "3"))
```
```{r}
# Use sem to create 2 new variables, one with only the semester (SP/FA) and 1 with the year
classes |> 
  mutate(semester = str_sub(sem, 1, 2),
         year = str_sub(sem, 3, 6))
```
```{r}
# How can we do this after mutating?
classes |> 
  mutate(spring = str_detect(sem, "SP")) |> 
  filter(spring == TRUE)
```
```{r}
# Exercise 1:
courses <- read.csv("https://mac-stat.github.io/data/registrar.csv")

# Check it out
head(courses)
# Construct a table that indicates the number of classes offered in each day/time slot
# Print only the 6 most popular time slots
courses |> 
  count(days, time) |> 
  arrange(desc(n)) |> 
  head()
```
```{r}
courses_clean <- courses |> 
  separate(avail_max, c("avail", "max"), sep = "/") |> 
  mutate(enroll = as.numeric(max) - as.numeric(avail)) |>
  separate(number, c("dept", "number", "section"))
  
head(courses_clean)

```
```{r}
# Identify the 6 departments that offered the most sections

courses_clean |> 
  count(dept) |> 
  arrange(desc(n)) |> 
  head()

# Identify the 6 departments with the longest average course titles

courses_clean |> 
  mutate(length = str_length(name)) |> 
  group_by(dept) |> 
  summarize(avg_length = mean(length)) |> 
  arrange(desc(avg_length)) |> 
  head()
```
```{r}
courses_clean |> 
  filter(str_detect(instructor, "Alicia Johnson")) 
```
```{r}
stat <- courses_clean |> 
  filter(dept == "STAT") |> 
  mutate(name = str_replace(name, "Introduction to ", "")) |>
  mutate(name = str_replace(name, "Statistical", "Stat")) |> 
  mutate(start_time = str_sub(time, 1, 5)) |> 
  select(number, name, start_time, enroll)

stat
```
```{r}
dim(stat)

```
```{r}
enrollments <- courses_clean |> 
  filter(dept != "PE", dept != "INTD") |> 
  filter(!(dept == "MUSI" & as.numeric(number) < 100)) |> 
  filter(!(dept == "THDA" & as.numeric(number) < 100)) |> 
  filter(!str_detect(section, "L"))
  
head(enrollments)
```

