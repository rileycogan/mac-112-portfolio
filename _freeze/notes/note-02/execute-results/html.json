{
  "hash": "9341732e155b1b1dd7ac2707b4131201",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Note 02\"\n---\n\n\n\n\n\n# Journal:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Date: \"9/16\"\n# - The next step in the class will be multivariate models, where we add a third variable into our equations. \n\n# In class: Multivariate Viz\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Date \"9/19\"\n\nlibrary(tidyverse)\n\nfave_places <- read.csv(\"https://ajohns24.github.io/data/112/our_fave_places.csv\")\n\n# Check it out\nhead(fave_places)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  latitude longitude\n1       46      -123\n2       33        52\n3       48       -90\n4       36      -112\n5       59        25\n6       39      -106\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Date \"9/23/2024\"\n\n# Effective Viz\n\nlibrary(tidyverse)\n\n #ggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  #geom_point()\n\n# labs creates titles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Date: \"09/27/2024\n\n# Why do we need visualizations? It allows for a quick, easy way to acquaint oneself with a dataset. \n# Assume you are given a clean dataset, what are the first steps? Using the head() function, you should check and see what the variables are, you should also use the dim() function to see how many points you are using, you should also learn what the units of observation are. Use the str() function. \n# The max number of categorical variables you can visualize in one plot is three, maybe four. The maximum number of numerical variables you could fit into one graph is seven. \n# We can make a plot more effective by adding labels, legends, titles, subtitles, captions, alt_text, color, correct plots.\n# The x axis is made up of latitude and the y axis is made up of longitude. \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# DATE \"10/02/24\"\n# Load tidyverse & data\nlibrary(tidyverse)\nelections <- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nelections |>\n  group_by(historical) |>\n  summarise(n()) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã— 2\n  historical `n()`\n  <chr>      <int>\n1 blue         494\n2 purple      1098\n3 red         1517\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a background map\nlibrary(socviz)\ndata(county_map)\n\n# Make a choropleth map\nlibrary(RColorBrewer)  # For the color scale\nlibrary(ggthemes) # For theme_map\nelections |> \n  mutate(county_fips = as.character(county_fips)) |> \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips)) |> \n  ggplot(aes(map_id = county_fips, fill = cut(repub_pct_20, breaks = seq(0, 100, by = 10)))) +\n    geom_map(map = county_map) +\n    scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n    expand_limits(x = county_map$long, y = county_map$lat)  + \n    theme_map() +\n    theme(legend.position = \"right\") + \n    coord_equal()\n```\n\n::: {.cell-output-display}\n![](note-02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#How many total people voted for the Democratic and Republican candidates in 2020?\n#What about in each state?\n#In just the state of Minnesota:\n#Which counties had the highest and lowest Democratic vote in 2020?\n#How did the Democratic vote in each county change from 2016 to 2020?\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# is.na() shows the coloumns with missing values, helping you to better acquiant yourself with your data set. rowSums() determines how many rows have missing values, coloumnSum() determines how many have no data entered. \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}